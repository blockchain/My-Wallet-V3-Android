apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-allopen'
apply plugin: 'com.novoda.build-properties'
apply from: '../quality/jacoco.gradle'
apply from: '../quality/releasechecks.gradle'

buildProperties {
    secrets.file rootProject.file('app/secrets.properties')
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.1'
    dexOptions.javaMaxHeapSize "3g"

    defaultConfig {
        applicationId "piuk.blockchain.android"
        targetSdkVersion 26
        versionCode 269
        versionName "6.7.0-rc2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        archivesBaseName = "blockchain-$versionName"
        // Flag to hide or show the Contacts feature
        buildConfigBoolean "CONTACTS_ENABLED", true
        manifestPlaceholders = [ FABRIC_API_KEY : buildProperties.secrets['fabricApiKey'].string ]
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [ GOOGLE_MAPS_KEY : buildProperties.secrets['mapsReleaseKey'].string ]
            multiDexEnabled false
            buildConfigBoolean "DOGFOOD", false
            buildConfigBoolean "USE_CRASHLYTICS", true
        }
        debug {
            manifestPlaceholders = [ GOOGLE_MAPS_KEY : buildProperties.secrets['mapsDebugKey'].string ]
            multiDexEnabled true
            buildConfigBoolean "DOGFOOD", false
            buildConfigBoolean "USE_CRASHLYTICS", false
        }
        dogfood {
            initWith release
            debuggable true
            buildConfigBoolean "DOGFOOD", true
            signingConfig signingConfigs.debug
            applicationIdSuffix ".dogfood"
            versionNameSuffix '-DOGFOOD'
        }
    }

    flavorDimensions "environment", "minSdk"

    productFlavors {
        /**
         * API LEVELS
         */
        minApi16 {
            dimension "minSdk"
            minSdkVersion 16
        }
        minApi21 {
            // Specifically to avoid Multidexing on CI, which is causing OOM errors for now
            // This should be removed when possible
            dimension "minSdk"
            minSdkVersion 21
        }
        /**
         * Environments
         */
        envProd {
            dimension "environment"
            buildConfigProperty "EXPLORER_URL", buildProperties.secrets['prodExplorer']
            buildConfigProperty "API_URL", buildProperties.secrets['prodApiServer']
            buildConfigProperty "WEBSOCKET_URL", buildProperties.secrets['prodWebsocketServer']
            buildConfigField "String", "ENVIRONMENT", '"env_prod"'
        }
        envDev {
            dimension "environment"
            buildConfigProperty "EXPLORER_URL", buildProperties.secrets['devExplorer']
            buildConfigProperty "API_URL", buildProperties.secrets['devApiServer']
            buildConfigProperty "WEBSOCKET_URL", buildProperties.secrets['devWebsocket']
            buildConfigField "String", "ENVIRONMENT", '"env_dev"'
            versionNameSuffix '-dev'
        }
        envStaging {
            dimension "environment"
            buildConfigProperty "EXPLORER_URL", buildProperties.secrets['stagingExplorer']
            buildConfigProperty "API_URL", buildProperties.secrets['stagingApiServer']
            buildConfigProperty "WEBSOCKET_URL", buildProperties.secrets['stagingWebsocket']
            buildConfigField "String", "ENVIRONMENT", '"env_staging"'
            versionNameSuffix '-staging'
        }
        envTestnet {
            dimension "environment"
            buildConfigProperty "EXPLORER_URL", buildProperties.secrets['testnetExplorer']
            buildConfigProperty "API_URL", buildProperties.secrets['testnetApiServer']
            buildConfigProperty "WEBSOCKET_URL", buildProperties.secrets['testnetWebsocket']
            buildConfigField "String", "ENVIRONMENT", '"env_testnet"'
            versionNameSuffix '-testnet'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        disable 'MissingTranslation'
        checkReleaseBuilds true
        abortOnError false
        fatal 'StopShip'
        htmlReport true
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'
    }
    dataBinding.enabled true

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
        reports.junitXml.destination = file('../build/test-results/')
        // Required for correct coverage of Robolectric tests
        jacoco {
            includeNoLocationClasses = true
        }
    }
}

allOpen {
    annotation("piuk.blockchain.android.util.annotations.Mockable")
}

afterEvaluate {
    // Ensure correct JSON file is being used when signing the app
    assembleEnvProdMinApi16Release.dependsOn checkFirebaseConfig
}

dependencies {
    compile files('libs/MyWalletHD.jar')
    compile files('libs/api-client-0.1.14-SNAPSHOT.jar')
    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    // Support Libs
    compile "com.android.support:appcompat-v7:$supportVersion"
    compile "com.android.support:recyclerview-v7:$supportVersion"
    compile "com.android.support:cardview-v7:$supportVersion"
    compile "com.android.support:gridlayout-v7:$supportVersion"
    compile "com.android.support:design:$supportVersion"
    compile "com.android.support:support-v13:$supportVersion"
    compile "com.android.support:preference-v14:$supportVersion"
    // Play Services
    compile "com.google.firebase:firebase-messaging:$googleServicesVersion"
    compile "com.google.android.gms:play-services-maps:$googleServicesVersion"
    // Constraint Layout
    compile "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    // MultiDex
    compile 'com.android.support:multidex:1.0.1'
    // BitcoinJ
    compile 'org.bitcoinj:bitcoinj-core:0.14.4'
    // Keep at 1.3 to match Android implementation
    compile 'commons-codec:commons-codec:1.3'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile('com.google.zxing:core:3.3.0') { transitive = true }
    compile 'com.github.mukeshsolanki:country-picker-android:1.1.7'
    compile 'com.aurelhubert:ahbottomnavigation:2.0.6'
    // URL Builder
    compile "io.mikael:urlbuilder:2.0.8"
    // RxJava
    compile "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    compile "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    compile 'com.jakewharton.rxbinding2:rxbinding-support-v4:2.0.0'
    // Retrofit
    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-jackson:$retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    // OkHttp
    compile "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    compile "com.squareup.okhttp3:okhttp:$okHttpVersion"
    // Dagger2
    compile "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    // Fingerprint authentication
    compile 'com.mtramin:rxfingerprint:2.1.0'
    // Custom fonts
    compile 'uk.co.chrisjenx:calligraphy:2.2.0'
    // Logging
    compile 'com.jakewharton.timber:timber:4.5.1'
    releaseCompile 'org.slf4j:slf4j-nop:1.7.22'
    dogfoodCompile 'org.slf4j:slf4j-nop:1.7.22'
    debugCompile 'org.slf4j:slf4j-simple:1.7.22'
    // ViewPager Indicator
    compile 'me.relex:circleindicator:1.2.2@aar'
    // Crash reporting
    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }
    // Device specs
    compile 'com.facebook.device.yearclass:yearclass:2.0.0'

    // UI/Instrumentation Tests
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile "org.mockito:mockito-core:$mockitoVersion"
    androidTestCompile "com.android.support:support-annotations:$supportVersion"
    androidTestCompile 'com.android.support.test:rules:1.0.0'
    androidTestCompile('com.android.support.test:runner:1.0.0') {
        exclude module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-core:3.0.0') {
        exclude group: 'javax.inject', module: 'support-annotations'
    }

    // Unit Tests
    testCompile 'org.json:json:20140107'
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile 'org.hamcrest:hamcrest-junit:2.0.0.0'
    testCompile('org.robolectric:robolectric:3.3.2') {
        exclude group: 'com.google.guava'
        exclude group: 'com.google.protobuf'
    }
    // Unit Tests in Kotlin
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testCompile 'org.amshove.kluent:kluent:1.19'
    testCompile("com.nhaarman:mockito-kotlin:1.5.0") {
        exclude module: 'kotlin-stdlib'
    }
}

buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.6.1'
        classpath 'io.fabric.tools:gradle:1.22.1'
        classpath 'com.novoda:gradle-build-properties-plugin:0.3'
    }
}

// Required for CountryPicker
repositories {
    jcenter()
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
}

// This must remain at the bottom of this file until Google work out a better way to do this
apply plugin: 'com.google.gms.google-services'