apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply from: '../jacoco.gradle'
apply from: 'environment.gradle'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.0'

    // Introduced to prevent crash during DEXing step since SDK 23, but also speeds up DEXing in general
    dexOptions {
        javaMaxHeapSize "2g"
    }

    defaultConfig {
        applicationId "piuk.blockchain.android"
        targetSdkVersion 25
        versionCode 231
        versionName "6.1.40"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        archivesBaseName = "blockchain-$versionName"
        // URLs for Staging and Dev
        buildConfigField "String", "DEV_ADDRESS_INFO", devAddressInfo
        buildConfigField "String", "STAGING_ADDRESS_INFO", stagingAddressInfo
        buildConfigField "String", "DEV_BALANCE", devBalance
        buildConfigField "String", "STAGING_BALANCE", stagingBalance
        buildConfigField "String", "DEV_DYNAMIC_FEE", devDynamicFee
        buildConfigField "String", "STAGING_DYNAMIC_FEE", stagingDynamicFee
        buildConfigField "String", "DEV_MULTIADDR_URL", devMultiaddrUrl
        buildConfigField "String", "STAGING_MULTIADDR_URL", stagingMultiaddrUrl
        buildConfigField "String", "DEV_PIN_STORE_URL", devPinStoreUrl
        buildConfigField "String", "STAGING_PIN_STORE_URL", stagingPinStoreUrl
        buildConfigField "String", "DEV_SETTINGS_PAYLOAD_URL", devSettingsPayloadUrl
        buildConfigField "String", "STAGING_SETTINGS_PAYLOAD_URL", stagingSettingdPayloadUrl
        buildConfigField "String", "DEV_TRANSACTION_URL", devTransactionUrl
        buildConfigField "String", "STAGING_TRANSACTION_URL", stagingTransactionUrl
        buildConfigField "String", "DEV_UNSPENT_OUTPUTS_URL", devUnspentOutputsUrl
        buildConfigField "String", "STAGING_UNSPENT_OUTPUTS_URL", stagingUnspentOutputsUrl
        buildConfigField "String", "DEV_WALLET_PAYLOAD_URL", devWalletPayloadUrl
        buildConfigField "String", "STAGING_WALLET_PAYLOAD_URL", stagingWalletPayloadUrl
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue "string", "google_maps_key", "AIzaSyB_5WN2exwvF4pqQ6rW6JdkHcYWjZOim4w"
            multiDexEnabled false
            buildConfigField "boolean", "DOGFOOD", "false"
        }
        debug {
            resValue "string", "google_maps_key", "AIzaSyASTnx7wjsCTkMr_RtLQYTzMAf7A9SWIMw"
            multiDexEnabled true
            buildConfigField "boolean", "DOGFOOD", "false"
        }
        dogfood {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".dogfood"
            versionNameSuffix '-DOGFOOD'
            debuggable true
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue "string", "google_maps_key", "AIzaSyB_5WN2exwvF4pqQ6rW6JdkHcYWjZOim4w"
            multiDexEnabled false
            buildConfigField "boolean", "DOGFOOD", "true"
        }
    }

    productFlavors {
        prod {
            // For release and testing on <API21 devices
            minSdkVersion 14
        }
        dev {
            // For everyday work, setting minSdkVersion to 21 bypasses MultiDex, resulting in
            // much faster builds
            minSdkVersion 21
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds true
        abortOnError false
        fatal 'StopShip'
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    dataBinding {
        enabled = true
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
        reports.junitXml.destination = file('../build/test-results/')
        // This allows "unstable" builds on CI rather than straight failures
        ignoreFailures true
        // Required for correct coverage of Robolectric tests
        jacoco {
            includeNoLocationClasses = true
        }
    }
}

ext {
    supportVersion = '25.0.1'
    googleServicesVersion = '9.8.0'
    rxJavaVersion = '2.0.1'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:$supportVersion"
    compile "com.android.support:recyclerview-v7:$supportVersion"
    compile "com.android.support:cardview-v7:$supportVersion"
    compile "com.android.support:design:$supportVersion"
    compile "com.android.support:support-v13:$supportVersion"
    compile "com.android.support:preference-v7:$supportVersion"
    compile "com.android.support:preference-v14:$supportVersion"

    // Enable crash reporting only for release version
    releaseCompile "com.google.firebase:firebase-crash:$googleServicesVersion"
    compile "com.google.firebase:firebase-messaging:$googleServicesVersion"
    compile "com.google.android.gms:play-services-maps:$googleServicesVersion"
    compile 'org.slf4j:slf4j-api:1.7.13'
    compile 'org.bitcoinj:bitcoinj-core:0.13.4'
    compile 'commons-io:commons-io:2.4'
    compile 'commons-codec:commons-codec:1.10'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'com.android.support:multidex:1.0.1'
    compile 'org.thoughtcrime.ssl.pinning:AndroidPinning:1.0.0'
    compile 'com.neovisionaries:nv-websocket-client:1.19'
    compile('com.google.zxing:core:3.3.0') { transitive = true }
    compile 'com.getbase:floatingactionbutton:1.10.1'
    compile 'com.github.mukeshsolanki:country-picker-android:1.1.6'
    // RxJava
    compile "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    compile "io.reactivex.rxjava2:rxandroid:$rxJavaVersion"
    // Dagger2
    compile 'com.google.dagger:dagger:2.7'
    annotationProcessor 'com.google.guava:guava:19.0'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.7'
    // Fingerprint authentication
    compile 'com.mtramin:rxfingerprint:2.0.0'

    // UI/Instrumentation Tests
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'org.mockito:mockito-core:1.9.5'
    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.6.3'
    androidTestCompile "com.android.support:support-annotations:$supportVersion"
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile('com.android.support.test:runner:0.5') {
        exclude module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2') {
        exclude group: 'javax.inject', module: 'support-annotations'
    }

    // Unit Tests
    testCompile 'org.json:json:20140107'
    testCompile 'org.slf4j:slf4j-simple:1.7.13'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'org.hamcrest:hamcrest-junit:2.0.0.0'
    testCompile('org.robolectric:robolectric:3.1.4') {
        exclude group: 'com.google.guava'
        exclude group: 'com.google.protobuf'
    }
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.3.0-beta4'
    }
}

// Required for RetroLambda && CountryPicker
repositories {
    jcenter()
    maven { url "https://jitpack.io" }
}

// This must remain at the bottom of this file until Google work out a better way to do this
apply plugin: 'com.google.gms.google-services'